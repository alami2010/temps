1
00:00:01,000 --> 00:00:02,002
- [Instructor] In the video on Docker,

2
00:00:02,002 --> 00:00:04,002
we published a Docker image to Docker Hub

3
00:00:04,002 --> 00:00:06,006
that Ernest then used in the Kubernetes video.

4
00:00:06,006 --> 00:00:07,009
Now, that was great,

5
00:00:07,009 --> 00:00:10,004
but the astute observer might have realized

6
00:00:10,004 --> 00:00:12,003
that we skipped a little step there.

7
00:00:12,003 --> 00:00:15,000
Instead of submitting code to a CI system,

8
00:00:15,000 --> 00:00:16,007
I just ran the build from my laptop

9
00:00:16,007 --> 00:00:18,006
and then uploaded that directly.

10
00:00:18,006 --> 00:00:19,008
That's a big no-no

11
00:00:19,008 --> 00:00:22,006
if you work on a team with more than one person.

12
00:00:22,006 --> 00:00:23,009
What we want is a pipeline

13
00:00:23,009 --> 00:00:25,002
that builds our infrastructure

14
00:00:25,002 --> 00:00:27,009
instead of engineers doing this on their laptops.

15
00:00:27,009 --> 00:00:29,005
So, let's build a Docker container

16
00:00:29,005 --> 00:00:30,004
and then deploy it

17
00:00:30,004 --> 00:00:34,002
to the container registry that we're using, Docker Hub.

18
00:00:34,002 --> 00:00:35,001
So for this video,

19
00:00:35,001 --> 00:00:36,009
we're going to be using GitHub Actions.

20
00:00:36,009 --> 00:00:38,002
And I'm at the documentation site

21
00:00:38,002 --> 00:00:40,003
for GitHub Actions right now.

22
00:00:40,003 --> 00:00:41,009
GitHub Actions are really great

23
00:00:41,009 --> 00:00:43,004
because we can do all sorts of things,

24
00:00:43,004 --> 00:00:45,008
from publishing a container to a registry,

25
00:00:45,008 --> 00:00:46,009
like we'll do in this video,

26
00:00:46,009 --> 00:00:48,007
or issuing an alert to Slack,

27
00:00:48,007 --> 00:00:50,009
or even SSHing into a bastion box

28
00:00:50,009 --> 00:00:52,007
and running Terraform commands.

29
00:00:52,007 --> 00:00:53,005
Just take some time

30
00:00:53,005 --> 00:00:55,000
to look through the GitHub marketplace

31
00:00:55,000 --> 00:00:58,001
and see what you can mix and match together here.

32
00:00:58,001 --> 00:00:59,008
We'll be using the build and push

33
00:00:59,008 --> 00:01:03,002
Docker Images action.

34
00:01:03,002 --> 00:01:05,005
Instead of creating our action in the command line,

35
00:01:05,005 --> 00:01:07,003
I'm going to just do everything in the code editor

36
00:01:07,003 --> 00:01:08,006
right in GitHub.

37
00:01:08,006 --> 00:01:10,003
So, let's move over to my repo

38
00:01:10,003 --> 00:01:12,005
and take a look at my workflow.

39
00:01:12,005 --> 00:01:14,006
Right now, I'm in my action, build and publish,

40
00:01:14,006 --> 00:01:16,008
but right now it doesn't really build and publish.

41
00:01:16,008 --> 00:01:18,000
It just builds.

42
00:01:18,000 --> 00:01:21,009
You can see we just have the build job here.

43
00:01:21,009 --> 00:01:23,007
We need to make a new job for our action.

44
00:01:23,007 --> 00:01:25,007
And since I'm chaining it to this one,

45
00:01:25,007 --> 00:01:27,000
I'm going to add it below.

46
00:01:27,000 --> 00:01:30,004
But first, I need a way to transfer my application binary

47
00:01:30,004 --> 00:01:33,003
from this one job at the top here

48
00:01:33,003 --> 00:01:35,006
to the new job that we're going to create.

49
00:01:35,006 --> 00:01:38,004
I'm adding a bit of code here to upload an artifact.

50
00:01:38,004 --> 00:01:39,008
Nothing too special here

51
00:01:39,008 --> 00:01:42,009
other than I'm setting the name for my artifact.

52
00:01:42,009 --> 00:01:45,003
Now I can reference it in my Docker build

53
00:01:45,003 --> 00:01:49,009
and my push job as word-cloud-generator.

54
00:01:49,009 --> 00:01:50,008
Okay, so now I'm going to do

55
00:01:50,008 --> 00:01:53,003
a little bit of cooking show set up here

56
00:01:53,003 --> 00:01:57,004
and paste in my job for build-docker.

57
00:01:57,004 --> 00:01:59,001
All right, so now you can look at this next job

58
00:01:59,001 --> 00:02:00,003
that I have here.

59
00:02:00,003 --> 00:02:02,002
There's a keyword here up at the very top that says,

60
00:02:02,002 --> 00:02:04,001
"Needs: build."

61
00:02:04,001 --> 00:02:07,005
This tells the job that the build job before it must run,

62
00:02:07,005 --> 00:02:08,009
and then it can run.

63
00:02:08,009 --> 00:02:10,003
This is setting a dependency

64
00:02:10,003 --> 00:02:12,007
inside of our workflow here.

65
00:02:12,007 --> 00:02:15,005
This next section of code fetches our binary,

66
00:02:15,005 --> 00:02:17,004
word-cloud-generator,

67
00:02:17,004 --> 00:02:19,004
and then it sets up some Docker metadata,

68
00:02:19,004 --> 00:02:21,004
like setting up our tags,

69
00:02:21,004 --> 00:02:22,006
making sure we're able to lock

70
00:02:22,006 --> 00:02:26,003
to whatever sha that we're using inside of GitHub.

71
00:02:26,003 --> 00:02:27,008
And then you'll probably notice

72
00:02:27,008 --> 00:02:30,004
that we're dealing with secrets here.

73
00:02:30,004 --> 00:02:33,000
These are secrets that are inside of our GitHub Action,

74
00:02:33,000 --> 00:02:34,008
and they let us log into Docker Hub.

75
00:02:34,008 --> 00:02:36,003
Now, I had to do this out of band

76
00:02:36,003 --> 00:02:38,005
as an admin on the repo,

77
00:02:38,005 --> 00:02:39,008
so you'll have to do that separately

78
00:02:39,008 --> 00:02:42,009
if you're following along on your own repo.

79
00:02:42,009 --> 00:02:43,007
And then lastly,

80
00:02:43,007 --> 00:02:45,006
we run the build and publish.

81
00:02:45,006 --> 00:02:48,002
This puts it all together as our metadata

82
00:02:48,002 --> 00:02:49,008
and uploads it up to Docker.

83
00:02:49,008 --> 00:02:52,002
So, this is all good.

84
00:02:52,002 --> 00:02:54,007
Let's go ahead and save this.

85
00:02:54,007 --> 00:02:56,000
I'm going to run a commit.

86
00:02:56,000 --> 00:02:57,005
I'm going to say,

87
00:02:57,005 --> 00:03:04,007
"Adding publish for the container."

88
00:03:04,007 --> 00:03:08,000
I'm going to go ahead and commit changes here.

89
00:03:08,000 --> 00:03:10,004
Okay, now we can see that's running.

90
00:03:10,004 --> 00:03:12,003
Let's go over to our actions.

91
00:03:12,003 --> 00:03:17,003
And we can see that we're adding publish for the container.

92
00:03:17,003 --> 00:03:18,007
Now, we see that we have two jobs,

93
00:03:18,007 --> 00:03:21,009
build and then build-docker.

94
00:03:21,009 --> 00:03:23,007
Let's see if we can update here to get our status.

95
00:03:23,007 --> 00:03:27,001
And we see the build is starting to run.

96
00:03:27,001 --> 00:03:28,003
So, we're going to speed all this up

97
00:03:28,003 --> 00:03:30,007
with a little bit of movie magic here.

98
00:03:30,007 --> 00:03:32,007
Okay, so we can see output from each stage.

99
00:03:32,007 --> 00:03:35,005
So, build and then build-docker.

100
00:03:35,005 --> 00:03:37,009
I really am very creative at naming these things.

101
00:03:37,009 --> 00:03:40,000
Maybe I need to try a little harder here.

102
00:03:40,000 --> 00:03:42,006
Okay, so let's move over to Docker Hub,

103
00:03:42,006 --> 00:03:47,001
and we can now see our images that we just pushed up here.

104
00:03:47,001 --> 00:03:48,006
So just a few seconds ago,

105
00:03:48,006 --> 00:03:49,008
we have our latest tag

106
00:03:49,008 --> 00:03:52,004
and then we have it with the sha as well.

107
00:03:52,004 --> 00:03:53,003
So, that's it.

108
00:03:53,003 --> 00:03:55,001
Now we have our container here

109
00:03:55,001 --> 00:03:58,008
getting built, tested, deployed to our registry.

110
00:03:58,008 --> 00:04:00,004
But before we call it a day,

111
00:04:00,004 --> 00:04:02,008
let's go back and make a change to our container.

112
00:04:02,008 --> 00:04:06,004
Let's say we want to make an OS version change.

113
00:04:06,004 --> 00:04:08,007
So, I'm going back into word-cloud-generator,

114
00:04:08,007 --> 00:04:11,000
and I'm going into my Docker file.

115
00:04:11,000 --> 00:04:14,009
And so instead of using alpine:3.16,

116
00:04:14,009 --> 00:04:21,000
let's bump the version to 3.17.

117
00:04:21,000 --> 00:04:22,001
And I'm going to say,

118
00:04:22,001 --> 00:04:25,000
update Docker file,

119
00:04:25,000 --> 00:04:30,002
"Bumping to alpine:3.17."

120
00:04:30,002 --> 00:04:32,004
So, we're just making an OS version change.

121
00:04:32,004 --> 00:04:35,007
I'm going to commit changes there.

122
00:04:35,007 --> 00:04:37,008
So, now we should have a new GitHub Action

123
00:04:37,008 --> 00:04:40,004
that's taking that in.

124
00:04:40,004 --> 00:04:44,000
And again, we'll use a little bit movie magic here.

125
00:04:44,000 --> 00:04:45,008
Okay, so that's it.

126
00:04:45,008 --> 00:04:48,003
We changed OS versions in our container

127
00:04:48,003 --> 00:04:51,004
and we're able to build and deploy that as well.

128
00:04:51,004 --> 00:04:52,005
The great thing about actions

129
00:04:52,005 --> 00:04:54,007
is that we can now stack actions together

130
00:04:54,007 --> 00:04:56,009
to trigger our environment to update

131
00:04:56,009 --> 00:04:58,004
and use the new container,

132
00:04:58,004 --> 00:05:00,002
as well as alert our team

133
00:05:00,002 --> 00:05:02,003
that a new version has been published.

134
00:05:02,003 --> 00:05:05,001
You know, CI is not just for applications anymore,

135
00:05:05,001 --> 00:05:08,000
but it's a key part to infrastructure as code.

