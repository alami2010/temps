1
00:00:00,005 --> 00:00:03,004
- [Instructor] Now let's talk Serverless.

2
00:00:03,004 --> 00:00:04,002
We don't have to mess

3
00:00:04,002 --> 00:00:06,003
with setting up all the infrastructure in boxes,

4
00:00:06,003 --> 00:00:09,002
and we can just get our code up and running.

5
00:00:09,002 --> 00:00:11,006
For this, let's use the Serverless Framework,

6
00:00:11,006 --> 00:00:14,004
which is free to use for open-source projects,

7
00:00:14,004 --> 00:00:17,009
but it does have a subscription model for organizations.

8
00:00:17,009 --> 00:00:20,004
Your provider might also offer one as well.

9
00:00:20,004 --> 00:00:23,008
So like for AWS, check out the Serverless Application Model,

10
00:00:23,008 --> 00:00:25,007
or AWS SAM.

11
00:00:25,007 --> 00:00:28,001
So I've logged into my account on Serverless,

12
00:00:28,001 --> 00:00:29,008
and I'm going to create a new application.

13
00:00:29,008 --> 00:00:32,004
I'm just clicking Create App.

14
00:00:32,004 --> 00:00:34,002
Now, there's a lot to choose from here,

15
00:00:34,002 --> 00:00:36,004
from taking an existing application

16
00:00:36,004 --> 00:00:38,001
into the Serverless Framework

17
00:00:38,001 --> 00:00:41,000
or starting a sample application from scratch.

18
00:00:41,000 --> 00:00:44,007
I'm selecting to create a Node Express API application.

19
00:00:44,007 --> 00:00:46,006
But as you can see, there are a lot of options

20
00:00:46,006 --> 00:00:48,006
for setting up the data stack as well.

21
00:00:48,006 --> 00:00:51,004
All the components you need to run your application

22
00:00:51,004 --> 00:00:53,001
can be configured with the framework

23
00:00:53,001 --> 00:00:59,006
much like Ernest showed with Terraform.

24
00:00:59,006 --> 00:01:01,007
Now let's give our Serverless app a name.

25
00:01:01,007 --> 00:01:06,003
I'm going to type in "infra-as-code-demo"

26
00:01:06,003 --> 00:01:09,004
and I'm going to go ahead and click Create,

27
00:01:09,004 --> 00:01:11,008
and that gives us a command that we need to run.

28
00:01:11,008 --> 00:01:16,002
So I'm going to take this and head on over to the command line

29
00:01:16,002 --> 00:01:18,002
and I'm going to run that command.

30
00:01:18,002 --> 00:01:19,007
Notice it's getting everything set up

31
00:01:19,007 --> 00:01:21,009
and then it says, "Do you want to deploy now?"

32
00:01:21,009 --> 00:01:23,009
Let's go ahead and do that.

33
00:01:23,009 --> 00:01:26,008
Now it starts building out the cloud formation stack

34
00:01:26,008 --> 00:01:28,004
so it can set up all the services

35
00:01:28,004 --> 00:01:30,003
that it needs to connect to.

36
00:01:30,003 --> 00:01:33,003
Once it's all done at the end, it's going to give us a URL.

37
00:01:33,003 --> 00:01:37,006
Let's go test it out.

38
00:01:37,006 --> 00:01:40,007
So in my browser, I just sent an HTTP GET request

39
00:01:40,007 --> 00:01:42,000
and this is what I get back.

40
00:01:42,000 --> 00:01:45,000
"Hello from root!" So kind of a default message here.

41
00:01:45,000 --> 00:01:46,005
Let's head back to the command line

42
00:01:46,005 --> 00:01:48,006
and look at the code for the application.

43
00:01:48,006 --> 00:01:52,007
So I'm moving into the infra-as-code-demo

44
00:01:52,007 --> 00:01:54,006
and we can see the serverless.yml.

45
00:01:54,006 --> 00:01:58,000
Let's take a look at that.

46
00:01:58,000 --> 00:02:00,003
In here, we can see that the handler that gets called

47
00:02:00,003 --> 00:02:02,001
is the index.handler.

48
00:02:02,001 --> 00:02:06,001
And let's go ahead and open up the the index here.

49
00:02:06,001 --> 00:02:08,005
So I'm inside of the index.js

50
00:02:08,005 --> 00:02:11,003
and we can see the response that we just saw in the browser.

51
00:02:11,003 --> 00:02:14,003
It says "Hello from root!"

52
00:02:14,003 --> 00:02:16,004
Let's move over to AWS.

53
00:02:16,004 --> 00:02:18,005
I've logged into the admin console

54
00:02:18,005 --> 00:02:19,008
and now we have an application

55
00:02:19,008 --> 00:02:22,009
in the AWS Lambda Section here

56
00:02:22,009 --> 00:02:27,009
that says "infra-as-code-demo-dev-api."

57
00:02:27,009 --> 00:02:32,001
Once I click into it, I can see that I have my API Gateway,

58
00:02:32,001 --> 00:02:34,009
which is the thing that receives the HTTP traffic,

59
00:02:34,009 --> 00:02:36,000
and then it's sending it over

60
00:02:36,000 --> 00:02:40,003
to my infra-as-code-demo Lambda function.

61
00:02:40,003 --> 00:02:41,005
That's the really cool thing

62
00:02:41,005 --> 00:02:43,004
about using the Serverless Framework.

63
00:02:43,004 --> 00:02:45,008
It sets up the gateway and it connects it automatically

64
00:02:45,008 --> 00:02:47,005
using the CloudFormation templates.

65
00:02:47,005 --> 00:02:49,005
Pretty cool, right?

66
00:02:49,005 --> 00:02:52,000
In here, we can monitor our function.

67
00:02:52,000 --> 00:02:53,002
We can see different metrics

68
00:02:53,002 --> 00:02:56,004
for how things are going with our Lambdas.

69
00:02:56,004 --> 00:02:58,008
We can look at log events

70
00:02:58,008 --> 00:03:02,000
and we can see our recent request that we just made.

71
00:03:02,000 --> 00:03:06,006
And remember, Serverless is billed in time that it's in use.

72
00:03:06,006 --> 00:03:09,003
This is usage-based billing.

73
00:03:09,003 --> 00:03:10,007
That's great because you're only paying

74
00:03:10,007 --> 00:03:12,000
for that execution time.

75
00:03:12,000 --> 00:03:14,004
And if you have an infrequently used application,

76
00:03:14,004 --> 00:03:16,004
you aren't paying to keep a box up and running

77
00:03:16,004 --> 00:03:19,002
or multiple boxes up and running all the time.

78
00:03:19,002 --> 00:03:21,002
Okay, now I'm going to switch back to the command line

79
00:03:21,002 --> 00:03:22,008
and let's change what our app does

80
00:03:22,008 --> 00:03:26,003
and give it a new message for that HTTP GET.

81
00:03:26,003 --> 00:03:31,000
So I'm just going to say, "hi LinkedIn Learning!"

82
00:03:31,000 --> 00:03:32,001
And we're going to write that.

83
00:03:32,001 --> 00:03:37,002
And now we're just going to say "serverless deploy."

84
00:03:37,002 --> 00:03:40,002
And we use a little video magic there to speed that up.

85
00:03:40,002 --> 00:03:45,001
And now let's go back to our URL.

86
00:03:45,001 --> 00:03:48,001
And now we get our message "Hi LinkedIn Learning!"

87
00:03:48,001 --> 00:03:51,006
So to recap, we use the Serverless Framework,

88
00:03:51,006 --> 00:03:55,008
which configured and deployed a Lambda and an API Gateway.

89
00:03:55,008 --> 00:03:58,003
There are templates for much more, as you saw.

90
00:03:58,003 --> 00:04:00,008
We had a running app in just a few lines of code

91
00:04:00,008 --> 00:04:04,001
and it had ability to scale horizontally to handle hundreds,

92
00:04:04,001 --> 00:04:06,008
if not a thousand requests at the same time.

93
00:04:06,008 --> 00:04:09,001
Big bursts of traffic can be handled this way.

94
00:04:09,001 --> 00:04:11,007
And we did all this without creating virtual machines

95
00:04:11,007 --> 00:04:14,005
or Kubernetes pods or any infrastructure.

96
00:04:14,005 --> 00:04:17,001
We tapped into our provider's services

97
00:04:17,001 --> 00:04:19,006
and we get usage-based billing on top.

98
00:04:19,006 --> 00:04:21,009
This means you have fewer things to maintain,

99
00:04:21,009 --> 00:04:24,002
fewer things to have security vulnerabilities,

100
00:04:24,002 --> 00:04:29,000
and, at medium to low volume, you usually have lower costs.

101
00:04:29,000 --> 00:04:33,000
So I hope you enjoyed this quick look into Serverless.

